// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go_gapic. DO NOT EDIT.


package computepb_test

import (
	"context"

	computepb "cloud.google.com/go/compute/apiv1/computepb"
	"google.golang.org/api/iterator"
)

func ExampleNewRegionInstanceGroupManagersClient() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Use client.
	_ = c
}

func ExampleRegionInstanceGroupManagersClient_AbandonInstances() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#AbandonInstancesRegionInstanceGroupManagerRequest.
	req := &computepb.AbandonInstancesRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RegionInstanceGroupManagersAbandonInstancesRequestResource: &computepb.RegionInstanceGroupManagersAbandonInstancesRequest{
			Instances: "",
		}
		RequestId: "",
	}
	resp, err := c.AbandonInstances(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_ApplyUpdatesToInstances() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#ApplyUpdatesToInstancesRegionInstanceGroupManagerRequest.
	req := &computepb.ApplyUpdatesToInstancesRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RegionInstanceGroupManagersApplyUpdatesRequestResource: &computepb.RegionInstanceGroupManagersApplyUpdatesRequest{
			AllInstances: "",
			Instances: "",
			MinimalAction: "",
			MostDisruptiveAllowedAction: "",
		}
	}
	resp, err := c.ApplyUpdatesToInstances(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_CreateInstances() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#CreateInstancesRegionInstanceGroupManagerRequest.
	req := &computepb.CreateInstancesRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RegionInstanceGroupManagersCreateInstancesRequestResource: &computepb.RegionInstanceGroupManagersCreateInstancesRequest{
			Instances: &computepb.PerInstanceConfig{
				Fingerprint: "",
				Name: "",
				PreservedState: &computepb.PreservedState{...}
				Status: "",
			}
		}
		RequestId: "",
	}
	resp, err := c.CreateInstances(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_Delete() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#DeleteRegionInstanceGroupManagerRequest.
	req := &computepb.DeleteRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RequestId: "",
	}
	resp, err := c.Delete(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_DeleteInstances() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#DeleteInstancesRegionInstanceGroupManagerRequest.
	req := &computepb.DeleteInstancesRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RegionInstanceGroupManagersDeleteInstancesRequestResource: &computepb.RegionInstanceGroupManagersDeleteInstancesRequest{
			Instances: "",
			SkipInstancesOnValidationError: "",
		}
		RequestId: "",
	}
	resp, err := c.DeleteInstances(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_DeletePerInstanceConfigs() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#DeletePerInstanceConfigsRegionInstanceGroupManagerRequest.
	req := &computepb.DeletePerInstanceConfigsRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RegionInstanceGroupManagerDeleteInstanceConfigReqResource: &computepb.RegionInstanceGroupManagerDeleteInstanceConfigReq{
			Names: "",
		}
	}
	resp, err := c.DeletePerInstanceConfigs(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_Get() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#GetRegionInstanceGroupManagerRequest.
	req := &computepb.GetRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
	}
	resp, err := c.Get(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_Insert() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#InsertRegionInstanceGroupManagerRequest.
	req := &computepb.InsertRegionInstanceGroupManagerRequest{
		InstanceGroupManagerResource: &computepb.InstanceGroupManager{
			AllInstancesConfig: &computepb.InstanceGroupManagerAllInstancesConfig{
				Properties: &computepb.InstancePropertiesPatch{...}
			}
			AutoHealingPolicies: &computepb.InstanceGroupManagerAutoHealingPolicy{
				HealthCheck: "",
				InitialDelaySec: "",
			}
			BaseInstanceName: "",
			CreationTimestamp: "",
			CurrentActions: &computepb.InstanceGroupManagerActionsSummary{
				Abandoning: "",
				Creating: "",
				CreatingWithoutRetries: "",
				Deleting: "",
				None: "",
				Recreating: "",
				Refreshing: "",
				Restarting: "",
				Resuming: "",
				Starting: "",
				Stopping: "",
				Suspending: "",
				Verifying: "",
			}
			Description: "",
			DistributionPolicy: &computepb.DistributionPolicy{
				TargetShape: "",
				Zones: &computepb.DistributionPolicyZoneConfiguration{...}
			}
			Fingerprint: "",
			Id: "",
			InstanceGroup: "",
			InstanceLifecyclePolicy: &computepb.InstanceGroupManagerInstanceLifecyclePolicy{
				DefaultActionOnFailure: "",
				ForceUpdateOnRepair: "",
			}
			InstanceTemplate: "",
			Kind: "",
			ListManagedInstancesResults: "",
			Name: "",
			NamedPorts: &computepb.NamedPort{
				Name: "",
				Port: "",
			}
			Region: "",
			SelfLink: "",
			StatefulPolicy: &computepb.StatefulPolicy{
				PreservedState: &computepb.StatefulPolicyPreservedState{...}
			}
			Status: &computepb.InstanceGroupManagerStatus{
				AllInstancesConfig: &computepb.InstanceGroupManagerStatusAllInstancesConfig{...}
				Autoscaler: "",
				IsStable: "",
				Stateful: &computepb.InstanceGroupManagerStatusStateful{...}
				VersionTarget: &computepb.InstanceGroupManagerStatusVersionTarget{...}
			}
			TargetPools: "",
			TargetSize: "",
			UpdatePolicy: &computepb.InstanceGroupManagerUpdatePolicy{
				InstanceRedistributionType: "",
				MaxSurge: &computepb.FixedOrPercent{...}
				MaxUnavailable: &computepb.FixedOrPercent{...}
				MinimalAction: "",
				MostDisruptiveAllowedAction: "",
				ReplacementMethod: "",
				Type: "",
			}
			Versions: &computepb.InstanceGroupManagerVersion{
				InstanceTemplate: "",
				Name: "",
				TargetSize: &computepb.FixedOrPercent{...}
			}
			Zone: "",
		}
		Project: "",
		Region: "",
		RequestId: "",
	}
	resp, err := c.Insert(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_List() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#ListRegionInstanceGroupManagersRequest.
	req := &computepb.ListRegionInstanceGroupManagersRequest{
		Filter: "",
		MaxResults: "",
		OrderBy: "",
		PageToken: "",
		Project: "",
		Region: "",
		ReturnPartialSuccess: "",
	}
	it := c.List(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp

		// If you need to access the underlying RPC response,
		// you can do so by casting the `Response` as below.
		// Otherwise, remove this line. Only populated after
		// first call to Next(). Not safe for concurrent access.
		_ = it.Response.(*computepb.RegionInstanceGroupManagerList)
	}
}

func ExampleRegionInstanceGroupManagersClient_ListErrors() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#ListErrorsRegionInstanceGroupManagersRequest.
	req := &computepb.ListErrorsRegionInstanceGroupManagersRequest{
		Filter: "",
		InstanceGroupManager: "",
		MaxResults: "",
		OrderBy: "",
		PageToken: "",
		Project: "",
		Region: "",
		ReturnPartialSuccess: "",
	}
	it := c.ListErrors(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp

		// If you need to access the underlying RPC response,
		// you can do so by casting the `Response` as below.
		// Otherwise, remove this line. Only populated after
		// first call to Next(). Not safe for concurrent access.
		_ = it.Response.(*computepb.RegionInstanceGroupManagersListErrorsResponse)
	}
}

func ExampleRegionInstanceGroupManagersClient_ListManagedInstances() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#ListManagedInstancesRegionInstanceGroupManagersRequest.
	req := &computepb.ListManagedInstancesRegionInstanceGroupManagersRequest{
		Filter: "",
		InstanceGroupManager: "",
		MaxResults: "",
		OrderBy: "",
		PageToken: "",
		Project: "",
		Region: "",
		ReturnPartialSuccess: "",
	}
	it := c.ListManagedInstances(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp

		// If you need to access the underlying RPC response,
		// you can do so by casting the `Response` as below.
		// Otherwise, remove this line. Only populated after
		// first call to Next(). Not safe for concurrent access.
		_ = it.Response.(*computepb.RegionInstanceGroupManagersListInstancesResponse)
	}
}

func ExampleRegionInstanceGroupManagersClient_ListPerInstanceConfigs() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#ListPerInstanceConfigsRegionInstanceGroupManagersRequest.
	req := &computepb.ListPerInstanceConfigsRegionInstanceGroupManagersRequest{
		Filter: "",
		InstanceGroupManager: "",
		MaxResults: "",
		OrderBy: "",
		PageToken: "",
		Project: "",
		Region: "",
		ReturnPartialSuccess: "",
	}
	it := c.ListPerInstanceConfigs(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp

		// If you need to access the underlying RPC response,
		// you can do so by casting the `Response` as below.
		// Otherwise, remove this line. Only populated after
		// first call to Next(). Not safe for concurrent access.
		_ = it.Response.(*computepb.RegionInstanceGroupManagersListInstanceConfigsResp)
	}
}

func ExampleRegionInstanceGroupManagersClient_Patch() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#PatchRegionInstanceGroupManagerRequest.
	req := &computepb.PatchRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		InstanceGroupManagerResource: &computepb.InstanceGroupManager{
			AllInstancesConfig: &computepb.InstanceGroupManagerAllInstancesConfig{
				Properties: &computepb.InstancePropertiesPatch{...}
			}
			AutoHealingPolicies: &computepb.InstanceGroupManagerAutoHealingPolicy{
				HealthCheck: "",
				InitialDelaySec: "",
			}
			BaseInstanceName: "",
			CreationTimestamp: "",
			CurrentActions: &computepb.InstanceGroupManagerActionsSummary{
				Abandoning: "",
				Creating: "",
				CreatingWithoutRetries: "",
				Deleting: "",
				None: "",
				Recreating: "",
				Refreshing: "",
				Restarting: "",
				Resuming: "",
				Starting: "",
				Stopping: "",
				Suspending: "",
				Verifying: "",
			}
			Description: "",
			DistributionPolicy: &computepb.DistributionPolicy{
				TargetShape: "",
				Zones: &computepb.DistributionPolicyZoneConfiguration{...}
			}
			Fingerprint: "",
			Id: "",
			InstanceGroup: "",
			InstanceLifecyclePolicy: &computepb.InstanceGroupManagerInstanceLifecyclePolicy{
				DefaultActionOnFailure: "",
				ForceUpdateOnRepair: "",
			}
			InstanceTemplate: "",
			Kind: "",
			ListManagedInstancesResults: "",
			Name: "",
			NamedPorts: &computepb.NamedPort{
				Name: "",
				Port: "",
			}
			Region: "",
			SelfLink: "",
			StatefulPolicy: &computepb.StatefulPolicy{
				PreservedState: &computepb.StatefulPolicyPreservedState{...}
			}
			Status: &computepb.InstanceGroupManagerStatus{
				AllInstancesConfig: &computepb.InstanceGroupManagerStatusAllInstancesConfig{...}
				Autoscaler: "",
				IsStable: "",
				Stateful: &computepb.InstanceGroupManagerStatusStateful{...}
				VersionTarget: &computepb.InstanceGroupManagerStatusVersionTarget{...}
			}
			TargetPools: "",
			TargetSize: "",
			UpdatePolicy: &computepb.InstanceGroupManagerUpdatePolicy{
				InstanceRedistributionType: "",
				MaxSurge: &computepb.FixedOrPercent{...}
				MaxUnavailable: &computepb.FixedOrPercent{...}
				MinimalAction: "",
				MostDisruptiveAllowedAction: "",
				ReplacementMethod: "",
				Type: "",
			}
			Versions: &computepb.InstanceGroupManagerVersion{
				InstanceTemplate: "",
				Name: "",
				TargetSize: &computepb.FixedOrPercent{...}
			}
			Zone: "",
		}
		Project: "",
		Region: "",
		RequestId: "",
	}
	resp, err := c.Patch(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_PatchPerInstanceConfigs() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#PatchPerInstanceConfigsRegionInstanceGroupManagerRequest.
	req := &computepb.PatchPerInstanceConfigsRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RegionInstanceGroupManagerPatchInstanceConfigReqResource: &computepb.RegionInstanceGroupManagerPatchInstanceConfigReq{
			PerInstanceConfigs: &computepb.PerInstanceConfig{
				Fingerprint: "",
				Name: "",
				PreservedState: &computepb.PreservedState{...}
				Status: "",
			}
		}
		RequestId: "",
	}
	resp, err := c.PatchPerInstanceConfigs(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_RecreateInstances() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#RecreateInstancesRegionInstanceGroupManagerRequest.
	req := &computepb.RecreateInstancesRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RegionInstanceGroupManagersRecreateRequestResource: &computepb.RegionInstanceGroupManagersRecreateRequest{
			Instances: "",
		}
		RequestId: "",
	}
	resp, err := c.RecreateInstances(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_Resize() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#ResizeRegionInstanceGroupManagerRequest.
	req := &computepb.ResizeRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RequestId: "",
		Size: "",
	}
	resp, err := c.Resize(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_SetInstanceTemplate() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetInstanceTemplateRegionInstanceGroupManagerRequest.
	req := &computepb.SetInstanceTemplateRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RegionInstanceGroupManagersSetTemplateRequestResource: &computepb.RegionInstanceGroupManagersSetTemplateRequest{
			InstanceTemplate: "",
		}
		RequestId: "",
	}
	resp, err := c.SetInstanceTemplate(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_SetTargetPools() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetTargetPoolsRegionInstanceGroupManagerRequest.
	req := &computepb.SetTargetPoolsRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RegionInstanceGroupManagersSetTargetPoolsRequestResource: &computepb.RegionInstanceGroupManagersSetTargetPoolsRequest{
			Fingerprint: "",
			TargetPools: "",
		}
		RequestId: "",
	}
	resp, err := c.SetTargetPools(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleRegionInstanceGroupManagersClient_UpdatePerInstanceConfigs() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewRegionInstanceGroupManagersClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#UpdatePerInstanceConfigsRegionInstanceGroupManagerRequest.
	req := &computepb.UpdatePerInstanceConfigsRegionInstanceGroupManagerRequest{
		InstanceGroupManager: "",
		Project: "",
		Region: "",
		RegionInstanceGroupManagerUpdateInstanceConfigReqResource: &computepb.RegionInstanceGroupManagerUpdateInstanceConfigReq{
			PerInstanceConfigs: &computepb.PerInstanceConfig{
				Fingerprint: "",
				Name: "",
				PreservedState: &computepb.PreservedState{...}
				Status: "",
			}
		}
		RequestId: "",
	}
	resp, err := c.UpdatePerInstanceConfigs(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}
