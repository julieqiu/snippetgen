// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go_gapic. DO NOT EDIT.


package computepb_test

import (
	"context"

	computepb "cloud.google.com/go/compute/apiv1/computepb"
	"google.golang.org/api/iterator"
)

func ExampleNewInstancesClient() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Use client.
	_ = c
}

func ExampleInstancesClient_AddAccessConfig() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#AddAccessConfigInstanceRequest.
	req := &computepb.AddAccessConfigInstanceRequest{
		AccessConfigResource: &computepb.AccessConfig{
			ExternalIpv6: "",
			ExternalIpv6PrefixLength: "",
			Kind: "",
			Name: "",
			NatIP: "",
			NetworkTier: "",
			PublicPtrDomainName: "",
			SecurityPolicy: "",
			SetPublicPtr: "",
			Type: "",
		}
		Instance: "",
		NetworkInterface: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.AddAccessConfig(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_AddResourcePolicies() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#AddResourcePoliciesInstanceRequest.
	req := &computepb.AddResourcePoliciesInstanceRequest{
		Instance: "",
		InstancesAddResourcePoliciesRequestResource: &computepb.InstancesAddResourcePoliciesRequest{
			ResourcePolicies: "",
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.AddResourcePolicies(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_AggregatedList() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#AggregatedListInstancesRequest.
	req := &computepb.AggregatedListInstancesRequest{
		Filter: "",
		IncludeAllScopes: "",
		MaxResults: "",
		OrderBy: "",
		PageToken: "",
		Project: "",
		ReturnPartialSuccess: "",
		ServiceProjectNumber: "",
	}
	it := c.AggregatedList(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp

		// If you need to access the underlying RPC response,
		// you can do so by casting the `Response` as below.
		// Otherwise, remove this line. Only populated after
		// first call to Next(). Not safe for concurrent access.
		_ = it.Response.(*computepb.InstanceAggregatedList)
	}
}

func ExampleInstancesClient_AttachDisk() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#AttachDiskInstanceRequest.
	req := &computepb.AttachDiskInstanceRequest{
		AttachedDiskResource: &computepb.AttachedDisk{
			Architecture: "",
			AutoDelete: "",
			Boot: "",
			DeviceName: "",
			DiskEncryptionKey: &computepb.CustomerEncryptionKey{
				KmsKeyName: "",
				KmsKeyServiceAccount: "",
				RawKey: "",
				RsaEncryptedKey: "",
				Sha256: "",
			}
			DiskSizeGb: "",
			ForceAttach: "",
			GuestOsFeatures: &computepb.GuestOsFeature{
				Type: "",
			}
			Index: "",
			InitializeParams: &computepb.AttachedDiskInitializeParams{
				Architecture: "",
				Description: "",
				DiskName: "",
				DiskSizeGb: "",
				DiskType: "",
				EnableConfidentialCompute: "",
				Labels: "",
				Licenses: "",
				OnUpdateAction: "",
				ProvisionedIops: "",
				ProvisionedThroughput: "",
				ReplicaZones: "",
				ResourceManagerTags: "",
				ResourcePolicies: "",
				SourceImage: "",
				SourceImageEncryptionKey: &computepb.CustomerEncryptionKey{...}
				SourceSnapshot: "",
				SourceSnapshotEncryptionKey: &computepb.CustomerEncryptionKey{...}
				StoragePool: "",
			}
			Interface: "",
			Kind: "",
			Licenses: "",
			Mode: "",
			SavedState: "",
			ShieldedInstanceInitialState: &computepb.InitialStateConfig{
				Dbs: &computepb.FileContentBuffer{...}
				Dbxs: &computepb.FileContentBuffer{...}
				Keks: &computepb.FileContentBuffer{...}
				Pk: &computepb.FileContentBuffer{...}
			}
			Source: "",
			Type: "",
		}
		ForceAttach: "",
		Instance: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.AttachDisk(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_BulkInsert() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#BulkInsertInstanceRequest.
	req := &computepb.BulkInsertInstanceRequest{
		BulkInsertInstanceResourceResource: &computepb.BulkInsertInstanceResource{
			Count: "",
			InstanceProperties: &computepb.InstanceProperties{
				AdvancedMachineFeatures: &computepb.AdvancedMachineFeatures{...}
				CanIpForward: "",
				ConfidentialInstanceConfig: &computepb.ConfidentialInstanceConfig{...}
				Description: "",
				Disks: &computepb.AttachedDisk{...}
				GuestAccelerators: &computepb.AcceleratorConfig{...}
				KeyRevocationActionType: "",
				Labels: "",
				MachineType: "",
				Metadata: &computepb.Metadata{...}
				MinCpuPlatform: "",
				NetworkInterfaces: &computepb.NetworkInterface{...}
				NetworkPerformanceConfig: &computepb.NetworkPerformanceConfig{...}
				PrivateIpv6GoogleAccess: "",
				ReservationAffinity: &computepb.ReservationAffinity{...}
				ResourceManagerTags: "",
				ResourcePolicies: "",
				Scheduling: &computepb.Scheduling{...}
				ServiceAccounts: &computepb.ServiceAccount{...}
				ShieldedInstanceConfig: &computepb.ShieldedInstanceConfig{...}
				Tags: &computepb.Tags{...}
			}
			LocationPolicy: &computepb.LocationPolicy{
				Locations: "",
				TargetShape: "",
			}
			MinCount: "",
			NamePattern: "",
			PerInstanceProperties: "",
			SourceInstanceTemplate: "",
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.BulkInsert(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_Delete() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#DeleteInstanceRequest.
	req := &computepb.DeleteInstanceRequest{
		Instance: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.Delete(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_DeleteAccessConfig() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#DeleteAccessConfigInstanceRequest.
	req := &computepb.DeleteAccessConfigInstanceRequest{
		AccessConfig: "",
		Instance: "",
		NetworkInterface: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.DeleteAccessConfig(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_DetachDisk() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#DetachDiskInstanceRequest.
	req := &computepb.DetachDiskInstanceRequest{
		DeviceName: "",
		Instance: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.DetachDisk(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_Get() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#GetInstanceRequest.
	req := &computepb.GetInstanceRequest{
		Instance: "",
		Project: "",
		Zone: "",
	}
	resp, err := c.Get(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_GetEffectiveFirewalls() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#GetEffectiveFirewallsInstanceRequest.
	req := &computepb.GetEffectiveFirewallsInstanceRequest{
		Instance: "",
		NetworkInterface: "",
		Project: "",
		Zone: "",
	}
	resp, err := c.GetEffectiveFirewalls(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_GetGuestAttributes() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#GetGuestAttributesInstanceRequest.
	req := &computepb.GetGuestAttributesInstanceRequest{
		Instance: "",
		Project: "",
		QueryPath: "",
		VariableKey: "",
		Zone: "",
	}
	resp, err := c.GetGuestAttributes(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_GetIamPolicy() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#GetIamPolicyInstanceRequest.
	req := &computepb.GetIamPolicyInstanceRequest{
		OptionsRequestedPolicyVersion: "",
		Project: "",
		Resource: "",
		Zone: "",
	}
	resp, err := c.GetIamPolicy(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_GetScreenshot() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#GetScreenshotInstanceRequest.
	req := &computepb.GetScreenshotInstanceRequest{
		Instance: "",
		Project: "",
		Zone: "",
	}
	resp, err := c.GetScreenshot(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_GetSerialPortOutput() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#GetSerialPortOutputInstanceRequest.
	req := &computepb.GetSerialPortOutputInstanceRequest{
		Instance: "",
		Port: "",
		Project: "",
		Start: "",
		Zone: "",
	}
	resp, err := c.GetSerialPortOutput(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_GetShieldedInstanceIdentity() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#GetShieldedInstanceIdentityInstanceRequest.
	req := &computepb.GetShieldedInstanceIdentityInstanceRequest{
		Instance: "",
		Project: "",
		Zone: "",
	}
	resp, err := c.GetShieldedInstanceIdentity(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_Insert() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#InsertInstanceRequest.
	req := &computepb.InsertInstanceRequest{
		InstanceResource: &computepb.Instance{
			AdvancedMachineFeatures: &computepb.AdvancedMachineFeatures{
				EnableNestedVirtualization: "",
				EnableUefiNetworking: "",
				ThreadsPerCore: "",
				VisibleCoreCount: "",
			}
			CanIpForward: "",
			ConfidentialInstanceConfig: &computepb.ConfidentialInstanceConfig{
				EnableConfidentialCompute: "",
			}
			CpuPlatform: "",
			CreationTimestamp: "",
			DeletionProtection: "",
			Description: "",
			Disks: &computepb.AttachedDisk{
				Architecture: "",
				AutoDelete: "",
				Boot: "",
				DeviceName: "",
				DiskEncryptionKey: &computepb.CustomerEncryptionKey{...}
				DiskSizeGb: "",
				ForceAttach: "",
				GuestOsFeatures: &computepb.GuestOsFeature{...}
				Index: "",
				InitializeParams: &computepb.AttachedDiskInitializeParams{...}
				Interface: "",
				Kind: "",
				Licenses: "",
				Mode: "",
				SavedState: "",
				ShieldedInstanceInitialState: &computepb.InitialStateConfig{...}
				Source: "",
				Type: "",
			}
			DisplayDevice: &computepb.DisplayDevice{
				EnableDisplay: "",
			}
			Fingerprint: "",
			GuestAccelerators: &computepb.AcceleratorConfig{
				AcceleratorCount: "",
				AcceleratorType: "",
			}
			Hostname: "",
			Id: "",
			InstanceEncryptionKey: &computepb.CustomerEncryptionKey{
				KmsKeyName: "",
				KmsKeyServiceAccount: "",
				RawKey: "",
				RsaEncryptedKey: "",
				Sha256: "",
			}
			KeyRevocationActionType: "",
			Kind: "",
			LabelFingerprint: "",
			Labels: "",
			LastStartTimestamp: "",
			LastStopTimestamp: "",
			LastSuspendedTimestamp: "",
			MachineType: "",
			Metadata: &computepb.Metadata{
				Fingerprint: "",
				Items: &computepb.Items{...}
				Kind: "",
			}
			MinCpuPlatform: "",
			Name: "",
			NetworkInterfaces: &computepb.NetworkInterface{
				AccessConfigs: &computepb.AccessConfig{...}
				AliasIpRanges: &computepb.AliasIpRange{...}
				Fingerprint: "",
				InternalIpv6PrefixLength: "",
				Ipv6AccessConfigs: &computepb.AccessConfig{...}
				Ipv6AccessType: "",
				Ipv6Address: "",
				Kind: "",
				Name: "",
				Network: "",
				NetworkAttachment: "",
				NetworkIP: "",
				NicType: "",
				QueueCount: "",
				StackType: "",
				Subnetwork: "",
			}
			NetworkPerformanceConfig: &computepb.NetworkPerformanceConfig{
				TotalEgressBandwidthTier: "",
			}
			Params: &computepb.InstanceParams{
				ResourceManagerTags: "",
			}
			PrivateIpv6GoogleAccess: "",
			ReservationAffinity: &computepb.ReservationAffinity{
				ConsumeReservationType: "",
				Key: "",
				Values: "",
			}
			ResourcePolicies: "",
			ResourceStatus: &computepb.ResourceStatus{
				PhysicalHost: "",
				UpcomingMaintenance: &computepb.UpcomingMaintenance{...}
			}
			SatisfiesPzi: "",
			SatisfiesPzs: "",
			Scheduling: &computepb.Scheduling{
				AutomaticRestart: "",
				InstanceTerminationAction: "",
				LocalSsdRecoveryTimeout: &computepb.Duration{...}
				LocationHint: "",
				MinNodeCpus: "",
				NodeAffinities: &computepb.SchedulingNodeAffinity{...}
				OnHostMaintenance: "",
				Preemptible: "",
				ProvisioningModel: "",
			}
			SelfLink: "",
			ServiceAccounts: &computepb.ServiceAccount{
				Email: "",
				Scopes: "",
			}
			ShieldedInstanceConfig: &computepb.ShieldedInstanceConfig{
				EnableIntegrityMonitoring: "",
				EnableSecureBoot: "",
				EnableVtpm: "",
			}
			ShieldedInstanceIntegrityPolicy: &computepb.ShieldedInstanceIntegrityPolicy{
				UpdateAutoLearnPolicy: "",
			}
			SourceMachineImage: "",
			SourceMachineImageEncryptionKey: &computepb.CustomerEncryptionKey{
				KmsKeyName: "",
				KmsKeyServiceAccount: "",
				RawKey: "",
				RsaEncryptedKey: "",
				Sha256: "",
			}
			StartRestricted: "",
			Status: "",
			StatusMessage: "",
			Tags: &computepb.Tags{
				Fingerprint: "",
				Items: "",
			}
			Zone: "",
		}
		Project: "",
		RequestId: "",
		SourceInstanceTemplate: "",
		SourceMachineImage: "",
		Zone: "",
	}
	resp, err := c.Insert(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_List() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#ListInstancesRequest.
	req := &computepb.ListInstancesRequest{
		Filter: "",
		MaxResults: "",
		OrderBy: "",
		PageToken: "",
		Project: "",
		ReturnPartialSuccess: "",
		Zone: "",
	}
	it := c.List(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp

		// If you need to access the underlying RPC response,
		// you can do so by casting the `Response` as below.
		// Otherwise, remove this line. Only populated after
		// first call to Next(). Not safe for concurrent access.
		_ = it.Response.(*computepb.InstanceList)
	}
}

func ExampleInstancesClient_ListReferrers() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#ListReferrersInstancesRequest.
	req := &computepb.ListReferrersInstancesRequest{
		Filter: "",
		Instance: "",
		MaxResults: "",
		OrderBy: "",
		PageToken: "",
		Project: "",
		ReturnPartialSuccess: "",
		Zone: "",
	}
	it := c.ListReferrers(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp

		// If you need to access the underlying RPC response,
		// you can do so by casting the `Response` as below.
		// Otherwise, remove this line. Only populated after
		// first call to Next(). Not safe for concurrent access.
		_ = it.Response.(*computepb.InstanceListReferrers)
	}
}

func ExampleInstancesClient_PerformMaintenance() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#PerformMaintenanceInstanceRequest.
	req := &computepb.PerformMaintenanceInstanceRequest{
		Instance: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.PerformMaintenance(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_RemoveResourcePolicies() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#RemoveResourcePoliciesInstanceRequest.
	req := &computepb.RemoveResourcePoliciesInstanceRequest{
		Instance: "",
		InstancesRemoveResourcePoliciesRequestResource: &computepb.InstancesRemoveResourcePoliciesRequest{
			ResourcePolicies: "",
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.RemoveResourcePolicies(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_Reset() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#ResetInstanceRequest.
	req := &computepb.ResetInstanceRequest{
		Instance: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.Reset(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_Resume() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#ResumeInstanceRequest.
	req := &computepb.ResumeInstanceRequest{
		Instance: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.Resume(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SendDiagnosticInterrupt() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SendDiagnosticInterruptInstanceRequest.
	req := &computepb.SendDiagnosticInterruptInstanceRequest{
		Instance: "",
		Project: "",
		Zone: "",
	}
	resp, err := c.SendDiagnosticInterrupt(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetDeletionProtection() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetDeletionProtectionInstanceRequest.
	req := &computepb.SetDeletionProtectionInstanceRequest{
		DeletionProtection: "",
		Project: "",
		RequestId: "",
		Resource: "",
		Zone: "",
	}
	resp, err := c.SetDeletionProtection(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetDiskAutoDelete() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetDiskAutoDeleteInstanceRequest.
	req := &computepb.SetDiskAutoDeleteInstanceRequest{
		AutoDelete: "",
		DeviceName: "",
		Instance: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.SetDiskAutoDelete(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetIamPolicy() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetIamPolicyInstanceRequest.
	req := &computepb.SetIamPolicyInstanceRequest{
		Project: "",
		Resource: "",
		Zone: "",
		ZoneSetPolicyRequestResource: &computepb.ZoneSetPolicyRequest{
			Bindings: &computepb.Binding{
				BindingId: "",
				Condition: &computepb.Expr{...}
				Members: "",
				Role: "",
			}
			Etag: "",
			Policy: &computepb.Policy{
				AuditConfigs: &computepb.AuditConfig{...}
				Bindings: &computepb.Binding{...}
				Etag: "",
				IamOwned: "",
				Rules: &computepb.Rule{...}
				Version: "",
			}
		}
	}
	resp, err := c.SetIamPolicy(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetLabels() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetLabelsInstanceRequest.
	req := &computepb.SetLabelsInstanceRequest{
		Instance: "",
		InstancesSetLabelsRequestResource: &computepb.InstancesSetLabelsRequest{
			LabelFingerprint: "",
			Labels: "",
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.SetLabels(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetMachineResources() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetMachineResourcesInstanceRequest.
	req := &computepb.SetMachineResourcesInstanceRequest{
		Instance: "",
		InstancesSetMachineResourcesRequestResource: &computepb.InstancesSetMachineResourcesRequest{
			GuestAccelerators: &computepb.AcceleratorConfig{
				AcceleratorCount: "",
				AcceleratorType: "",
			}
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.SetMachineResources(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetMachineType() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetMachineTypeInstanceRequest.
	req := &computepb.SetMachineTypeInstanceRequest{
		Instance: "",
		InstancesSetMachineTypeRequestResource: &computepb.InstancesSetMachineTypeRequest{
			MachineType: "",
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.SetMachineType(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetMetadata() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetMetadataInstanceRequest.
	req := &computepb.SetMetadataInstanceRequest{
		Instance: "",
		MetadataResource: &computepb.Metadata{
			Fingerprint: "",
			Items: &computepb.Items{
				Key: "",
				Value: "",
			}
			Kind: "",
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.SetMetadata(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetMinCpuPlatform() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetMinCpuPlatformInstanceRequest.
	req := &computepb.SetMinCpuPlatformInstanceRequest{
		Instance: "",
		InstancesSetMinCpuPlatformRequestResource: &computepb.InstancesSetMinCpuPlatformRequest{
			MinCpuPlatform: "",
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.SetMinCpuPlatform(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetName() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetNameInstanceRequest.
	req := &computepb.SetNameInstanceRequest{
		Instance: "",
		InstancesSetNameRequestResource: &computepb.InstancesSetNameRequest{
			CurrentName: "",
			Name: "",
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.SetName(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetScheduling() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetSchedulingInstanceRequest.
	req := &computepb.SetSchedulingInstanceRequest{
		Instance: "",
		Project: "",
		RequestId: "",
		SchedulingResource: &computepb.Scheduling{
			AutomaticRestart: "",
			InstanceTerminationAction: "",
			LocalSsdRecoveryTimeout: &computepb.Duration{
				Nanos: "",
				Seconds: "",
			}
			LocationHint: "",
			MinNodeCpus: "",
			NodeAffinities: &computepb.SchedulingNodeAffinity{
				Key: "",
				Operator: "",
				Values: "",
			}
			OnHostMaintenance: "",
			Preemptible: "",
			ProvisioningModel: "",
		}
		Zone: "",
	}
	resp, err := c.SetScheduling(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetSecurityPolicy() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetSecurityPolicyInstanceRequest.
	req := &computepb.SetSecurityPolicyInstanceRequest{
		Instance: "",
		InstancesSetSecurityPolicyRequestResource: &computepb.InstancesSetSecurityPolicyRequest{
			NetworkInterfaces: "",
			SecurityPolicy: "",
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.SetSecurityPolicy(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetServiceAccount() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetServiceAccountInstanceRequest.
	req := &computepb.SetServiceAccountInstanceRequest{
		Instance: "",
		InstancesSetServiceAccountRequestResource: &computepb.InstancesSetServiceAccountRequest{
			Email: "",
			Scopes: "",
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.SetServiceAccount(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetShieldedInstanceIntegrityPolicy() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetShieldedInstanceIntegrityPolicyInstanceRequest.
	req := &computepb.SetShieldedInstanceIntegrityPolicyInstanceRequest{
		Instance: "",
		Project: "",
		RequestId: "",
		ShieldedInstanceIntegrityPolicyResource: &computepb.ShieldedInstanceIntegrityPolicy{
			UpdateAutoLearnPolicy: "",
		}
		Zone: "",
	}
	resp, err := c.SetShieldedInstanceIntegrityPolicy(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SetTags() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetTagsInstanceRequest.
	req := &computepb.SetTagsInstanceRequest{
		Instance: "",
		Project: "",
		RequestId: "",
		TagsResource: &computepb.Tags{
			Fingerprint: "",
			Items: "",
		}
		Zone: "",
	}
	resp, err := c.SetTags(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_SimulateMaintenanceEvent() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SimulateMaintenanceEventInstanceRequest.
	req := &computepb.SimulateMaintenanceEventInstanceRequest{
		Instance: "",
		Project: "",
		RequestId: "",
		WithExtendedNotifications: "",
		Zone: "",
	}
	resp, err := c.SimulateMaintenanceEvent(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_Start() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#StartInstanceRequest.
	req := &computepb.StartInstanceRequest{
		Instance: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.Start(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_StartWithEncryptionKey() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#StartWithEncryptionKeyInstanceRequest.
	req := &computepb.StartWithEncryptionKeyInstanceRequest{
		Instance: "",
		InstancesStartWithEncryptionKeyRequestResource: &computepb.InstancesStartWithEncryptionKeyRequest{
			Disks: &computepb.CustomerEncryptionKeyProtectedDisk{
				DiskEncryptionKey: &computepb.CustomerEncryptionKey{...}
				Source: "",
			}
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.StartWithEncryptionKey(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_Stop() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#StopInstanceRequest.
	req := &computepb.StopInstanceRequest{
		DiscardLocalSsd: "",
		Instance: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.Stop(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_Suspend() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SuspendInstanceRequest.
	req := &computepb.SuspendInstanceRequest{
		DiscardLocalSsd: "",
		Instance: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.Suspend(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_TestIamPermissions() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#TestIamPermissionsInstanceRequest.
	req := &computepb.TestIamPermissionsInstanceRequest{
		Project: "",
		Resource: "",
		TestPermissionsRequestResource: &computepb.TestPermissionsRequest{
			Permissions: "",
		}
		Zone: "",
	}
	resp, err := c.TestIamPermissions(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_Update() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#UpdateInstanceRequest.
	req := &computepb.UpdateInstanceRequest{
		Instance: "",
		InstanceResource: &computepb.Instance{
			AdvancedMachineFeatures: &computepb.AdvancedMachineFeatures{
				EnableNestedVirtualization: "",
				EnableUefiNetworking: "",
				ThreadsPerCore: "",
				VisibleCoreCount: "",
			}
			CanIpForward: "",
			ConfidentialInstanceConfig: &computepb.ConfidentialInstanceConfig{
				EnableConfidentialCompute: "",
			}
			CpuPlatform: "",
			CreationTimestamp: "",
			DeletionProtection: "",
			Description: "",
			Disks: &computepb.AttachedDisk{
				Architecture: "",
				AutoDelete: "",
				Boot: "",
				DeviceName: "",
				DiskEncryptionKey: &computepb.CustomerEncryptionKey{...}
				DiskSizeGb: "",
				ForceAttach: "",
				GuestOsFeatures: &computepb.GuestOsFeature{...}
				Index: "",
				InitializeParams: &computepb.AttachedDiskInitializeParams{...}
				Interface: "",
				Kind: "",
				Licenses: "",
				Mode: "",
				SavedState: "",
				ShieldedInstanceInitialState: &computepb.InitialStateConfig{...}
				Source: "",
				Type: "",
			}
			DisplayDevice: &computepb.DisplayDevice{
				EnableDisplay: "",
			}
			Fingerprint: "",
			GuestAccelerators: &computepb.AcceleratorConfig{
				AcceleratorCount: "",
				AcceleratorType: "",
			}
			Hostname: "",
			Id: "",
			InstanceEncryptionKey: &computepb.CustomerEncryptionKey{
				KmsKeyName: "",
				KmsKeyServiceAccount: "",
				RawKey: "",
				RsaEncryptedKey: "",
				Sha256: "",
			}
			KeyRevocationActionType: "",
			Kind: "",
			LabelFingerprint: "",
			Labels: "",
			LastStartTimestamp: "",
			LastStopTimestamp: "",
			LastSuspendedTimestamp: "",
			MachineType: "",
			Metadata: &computepb.Metadata{
				Fingerprint: "",
				Items: &computepb.Items{...}
				Kind: "",
			}
			MinCpuPlatform: "",
			Name: "",
			NetworkInterfaces: &computepb.NetworkInterface{
				AccessConfigs: &computepb.AccessConfig{...}
				AliasIpRanges: &computepb.AliasIpRange{...}
				Fingerprint: "",
				InternalIpv6PrefixLength: "",
				Ipv6AccessConfigs: &computepb.AccessConfig{...}
				Ipv6AccessType: "",
				Ipv6Address: "",
				Kind: "",
				Name: "",
				Network: "",
				NetworkAttachment: "",
				NetworkIP: "",
				NicType: "",
				QueueCount: "",
				StackType: "",
				Subnetwork: "",
			}
			NetworkPerformanceConfig: &computepb.NetworkPerformanceConfig{
				TotalEgressBandwidthTier: "",
			}
			Params: &computepb.InstanceParams{
				ResourceManagerTags: "",
			}
			PrivateIpv6GoogleAccess: "",
			ReservationAffinity: &computepb.ReservationAffinity{
				ConsumeReservationType: "",
				Key: "",
				Values: "",
			}
			ResourcePolicies: "",
			ResourceStatus: &computepb.ResourceStatus{
				PhysicalHost: "",
				UpcomingMaintenance: &computepb.UpcomingMaintenance{...}
			}
			SatisfiesPzi: "",
			SatisfiesPzs: "",
			Scheduling: &computepb.Scheduling{
				AutomaticRestart: "",
				InstanceTerminationAction: "",
				LocalSsdRecoveryTimeout: &computepb.Duration{...}
				LocationHint: "",
				MinNodeCpus: "",
				NodeAffinities: &computepb.SchedulingNodeAffinity{...}
				OnHostMaintenance: "",
				Preemptible: "",
				ProvisioningModel: "",
			}
			SelfLink: "",
			ServiceAccounts: &computepb.ServiceAccount{
				Email: "",
				Scopes: "",
			}
			ShieldedInstanceConfig: &computepb.ShieldedInstanceConfig{
				EnableIntegrityMonitoring: "",
				EnableSecureBoot: "",
				EnableVtpm: "",
			}
			ShieldedInstanceIntegrityPolicy: &computepb.ShieldedInstanceIntegrityPolicy{
				UpdateAutoLearnPolicy: "",
			}
			SourceMachineImage: "",
			SourceMachineImageEncryptionKey: &computepb.CustomerEncryptionKey{
				KmsKeyName: "",
				KmsKeyServiceAccount: "",
				RawKey: "",
				RsaEncryptedKey: "",
				Sha256: "",
			}
			StartRestricted: "",
			Status: "",
			StatusMessage: "",
			Tags: &computepb.Tags{
				Fingerprint: "",
				Items: "",
			}
			Zone: "",
		}
		MinimalAction: "",
		MostDisruptiveAllowedAction: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.Update(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_UpdateAccessConfig() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#UpdateAccessConfigInstanceRequest.
	req := &computepb.UpdateAccessConfigInstanceRequest{
		AccessConfigResource: &computepb.AccessConfig{
			ExternalIpv6: "",
			ExternalIpv6PrefixLength: "",
			Kind: "",
			Name: "",
			NatIP: "",
			NetworkTier: "",
			PublicPtrDomainName: "",
			SecurityPolicy: "",
			SetPublicPtr: "",
			Type: "",
		}
		Instance: "",
		NetworkInterface: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.UpdateAccessConfig(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_UpdateDisplayDevice() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#UpdateDisplayDeviceInstanceRequest.
	req := &computepb.UpdateDisplayDeviceInstanceRequest{
		DisplayDeviceResource: &computepb.DisplayDevice{
			EnableDisplay: "",
		}
		Instance: "",
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.UpdateDisplayDevice(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_UpdateNetworkInterface() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#UpdateNetworkInterfaceInstanceRequest.
	req := &computepb.UpdateNetworkInterfaceInstanceRequest{
		Instance: "",
		NetworkInterface: "",
		NetworkInterfaceResource: &computepb.NetworkInterface{
			AccessConfigs: &computepb.AccessConfig{
				ExternalIpv6: "",
				ExternalIpv6PrefixLength: "",
				Kind: "",
				Name: "",
				NatIP: "",
				NetworkTier: "",
				PublicPtrDomainName: "",
				SecurityPolicy: "",
				SetPublicPtr: "",
				Type: "",
			}
			AliasIpRanges: &computepb.AliasIpRange{
				IpCidrRange: "",
				SubnetworkRangeName: "",
			}
			Fingerprint: "",
			InternalIpv6PrefixLength: "",
			Ipv6AccessConfigs: &computepb.AccessConfig{
				ExternalIpv6: "",
				ExternalIpv6PrefixLength: "",
				Kind: "",
				Name: "",
				NatIP: "",
				NetworkTier: "",
				PublicPtrDomainName: "",
				SecurityPolicy: "",
				SetPublicPtr: "",
				Type: "",
			}
			Ipv6AccessType: "",
			Ipv6Address: "",
			Kind: "",
			Name: "",
			Network: "",
			NetworkAttachment: "",
			NetworkIP: "",
			NicType: "",
			QueueCount: "",
			StackType: "",
			Subnetwork: "",
		}
		Project: "",
		RequestId: "",
		Zone: "",
	}
	resp, err := c.UpdateNetworkInterface(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInstancesClient_UpdateShieldedInstanceConfig() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInstancesClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#UpdateShieldedInstanceConfigInstanceRequest.
	req := &computepb.UpdateShieldedInstanceConfigInstanceRequest{
		Instance: "",
		Project: "",
		RequestId: "",
		ShieldedInstanceConfigResource: &computepb.ShieldedInstanceConfig{
			EnableIntegrityMonitoring: "",
			EnableSecureBoot: "",
			EnableVtpm: "",
		}
		Zone: "",
	}
	resp, err := c.UpdateShieldedInstanceConfig(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}
