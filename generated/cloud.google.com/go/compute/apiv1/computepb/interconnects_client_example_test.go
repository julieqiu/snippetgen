// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go_gapic. DO NOT EDIT.


package computepb_test

import (
	"context"

	computepb "cloud.google.com/go/compute/apiv1/computepb"
	"google.golang.org/api/iterator"
)

func ExampleNewInterconnectsClient() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInterconnectsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Use client.
	_ = c
}

func ExampleInterconnectsClient_Delete() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInterconnectsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#DeleteInterconnectRequest.
	req := &computepb.DeleteInterconnectRequest{
		Interconnect: "",
		Project: "",
		RequestId: "",
	}
	resp, err := c.Delete(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInterconnectsClient_Get() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInterconnectsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#GetInterconnectRequest.
	req := &computepb.GetInterconnectRequest{
		Interconnect: "",
		Project: "",
	}
	resp, err := c.Get(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInterconnectsClient_GetDiagnostics() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInterconnectsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#GetDiagnosticsInterconnectRequest.
	req := &computepb.GetDiagnosticsInterconnectRequest{
		Interconnect: "",
		Project: "",
	}
	resp, err := c.GetDiagnostics(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInterconnectsClient_GetMacsecConfig() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInterconnectsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#GetMacsecConfigInterconnectRequest.
	req := &computepb.GetMacsecConfigInterconnectRequest{
		Interconnect: "",
		Project: "",
	}
	resp, err := c.GetMacsecConfig(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInterconnectsClient_Insert() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInterconnectsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#InsertInterconnectRequest.
	req := &computepb.InsertInterconnectRequest{
		InterconnectResource: &computepb.Interconnect{
			AdminEnabled: "",
			AvailableFeatures: "",
			CircuitInfos: &computepb.InterconnectCircuitInfo{
				CustomerDemarcId: "",
				GoogleCircuitId: "",
				GoogleDemarcId: "",
			}
			CreationTimestamp: "",
			CustomerName: "",
			Description: "",
			ExpectedOutages: &computepb.InterconnectOutageNotification{
				AffectedCircuits: "",
				Description: "",
				EndTime: "",
				IssueType: "",
				Name: "",
				Source: "",
				StartTime: "",
				State: "",
			}
			GoogleIpAddress: "",
			GoogleReferenceId: "",
			Id: "",
			InterconnectAttachments: "",
			InterconnectType: "",
			Kind: "",
			LabelFingerprint: "",
			Labels: "",
			LinkType: "",
			Location: "",
			Macsec: &computepb.InterconnectMacsec{
				FailOpen: "",
				PreSharedKeys: &computepb.InterconnectMacsecPreSharedKey{...}
			}
			MacsecEnabled: "",
			Name: "",
			NocContactEmail: "",
			OperationalStatus: "",
			PeerIpAddress: "",
			ProvisionedLinkCount: "",
			RemoteLocation: "",
			RequestedFeatures: "",
			RequestedLinkCount: "",
			SatisfiesPzs: "",
			SelfLink: "",
			State: "",
		}
		Project: "",
		RequestId: "",
	}
	resp, err := c.Insert(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInterconnectsClient_List() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInterconnectsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#ListInterconnectsRequest.
	req := &computepb.ListInterconnectsRequest{
		Filter: "",
		MaxResults: "",
		OrderBy: "",
		PageToken: "",
		Project: "",
		ReturnPartialSuccess: "",
	}
	it := c.List(ctx, req)
	for {
		resp, err := it.Next()
		if err == iterator.Done {
			break
		}
		if err != nil {
			// TODO: Handle error.
		}
		// TODO: Use resp.
		_ = resp

		// If you need to access the underlying RPC response,
		// you can do so by casting the `Response` as below.
		// Otherwise, remove this line. Only populated after
		// first call to Next(). Not safe for concurrent access.
		_ = it.Response.(*computepb.InterconnectList)
	}
}

func ExampleInterconnectsClient_Patch() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInterconnectsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#PatchInterconnectRequest.
	req := &computepb.PatchInterconnectRequest{
		Interconnect: "",
		InterconnectResource: &computepb.Interconnect{
			AdminEnabled: "",
			AvailableFeatures: "",
			CircuitInfos: &computepb.InterconnectCircuitInfo{
				CustomerDemarcId: "",
				GoogleCircuitId: "",
				GoogleDemarcId: "",
			}
			CreationTimestamp: "",
			CustomerName: "",
			Description: "",
			ExpectedOutages: &computepb.InterconnectOutageNotification{
				AffectedCircuits: "",
				Description: "",
				EndTime: "",
				IssueType: "",
				Name: "",
				Source: "",
				StartTime: "",
				State: "",
			}
			GoogleIpAddress: "",
			GoogleReferenceId: "",
			Id: "",
			InterconnectAttachments: "",
			InterconnectType: "",
			Kind: "",
			LabelFingerprint: "",
			Labels: "",
			LinkType: "",
			Location: "",
			Macsec: &computepb.InterconnectMacsec{
				FailOpen: "",
				PreSharedKeys: &computepb.InterconnectMacsecPreSharedKey{...}
			}
			MacsecEnabled: "",
			Name: "",
			NocContactEmail: "",
			OperationalStatus: "",
			PeerIpAddress: "",
			ProvisionedLinkCount: "",
			RemoteLocation: "",
			RequestedFeatures: "",
			RequestedLinkCount: "",
			SatisfiesPzs: "",
			SelfLink: "",
			State: "",
		}
		Project: "",
		RequestId: "",
	}
	resp, err := c.Patch(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}

func ExampleInterconnectsClient_SetLabels() {
	ctx := context.Background()
	// This snippet has been automatically generated and should be regarded as a code template only.
	// It will require modifications to work:
	// - It may require correct/in-range values for request initialization.
	// - It may require specifying regional endpoints when creating the service client as shown in:
	//   https://pkg.go.dev/cloud.google.com/go#hdr-Client_Options
	c, err := computepb.NewInterconnectsClient(ctx)
	if err != nil {
		// TODO: Handle error.
	}
	defer c.Close()

	// TODO: Fill request struct fields.
	// See https://pkg.go.dev/cloud.google.com/go/compute/apiv1/computepb#SetLabelsInterconnectRequest.
	req := &computepb.SetLabelsInterconnectRequest{
		GlobalSetLabelsRequestResource: &computepb.GlobalSetLabelsRequest{
			LabelFingerprint: "",
			Labels: "",
		}
		Project: "",
		Resource: "",
	}
	resp, err := c.SetLabels(ctx, req)
	if err != nil {
		// TODO: Handle error.
	}
	// TODO: Use resp.
	_ = resp
}
